/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    repositories {
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'base' // To add "clean" task to the root project.
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

apply from: rootProject.file('common.gradle')

subprojects {
    apply from: rootProject.file('common.gradle')
}

dependencies {
    //compile project(":JavaScripting")

    compile project(':JavaIntegration')
    compile project(':JavaAnnotations')
    compile project(':JavaBytecodeCompiler')
    compile project(':JavaShared')
    compile project(':Validator')
    compile project(':Parser')
    compile project(':CodeModel')
    compile project(':Shared')

    minecraft 'net.minecraftforge:forge:1.14.2-26.0.25'
}

minecraft {
    mappings channel: 'snapshot', version: '20190608-1.14.2'
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            mods {
                crafttweaker {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'


            mods {
                crafttweaker {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "crafttweaker",
                "Specification-Vendor"    : "CraftTweaker",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "CraftTweaker",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
